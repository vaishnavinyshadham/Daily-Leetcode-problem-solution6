class Solution {
    public int punishmentNumber(int n) {
        int sum = 0;
        
        for (int i = 1; i <= n; i++) {
            int square = i * i;
            String squareStr = String.valueOf(square);
            
            if (canPartition(squareStr, 0, i, 0)) {
                sum += square;
            }
        }
        
        return sum;
    }

    private boolean canPartition(String str, int index, int target, int currentSum) {
        if (index == str.length()) {
            return currentSum == target;
        }
        
        int num = 0;
        for (int i = index; i < str.length(); i++) {
            num = num * 10 + (str.charAt(i) - '0'); // Convert substring to integer
            if (num + currentSum > target) break; // Stop early if sum exceeds target
            if (canPartition(str, i + 1, target, currentSum + num)) {
                return true;
            }
        }
        
        return false;
    }
}
